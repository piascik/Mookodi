/**
 * @file
 * @brief Config.h provides a C++ wrapper around plibsys's ini file parser. This provides
 * configuration file support for the camera server.
 * @author Chris Mottram
 * @version $Id$
 */
#include "Config.h"
#include <vector>
#include <iostream>
#include "log4cxx/logger.h"
#include <plibsys/plibsys.h>
using std::string;
using std::vector;

using std::cout;
using std::cerr;
using std::endl;
using std::exception;
using namespace log4cxx;

/**
 * Logger instance for the configuration file (Config.cpp).
 */
static LoggerPtr logger(Logger::getLogger("mookodi.camera.server.Config"));

/**
 * Constructor for the Config object. 
 */
Config::Config()
{
}


/**
 * Destructor for the Config object. Does nothing.
 */
Config::~Config()
{
}

/**
 * Method to set the configuration filename to load config from in load_config.
 * @param config_filename The configuration filename as a string.
 * @see Config::mConfigFilename
 * @see Config::load_config
 */
void Config::set_config_filename(const std::string & config_filename)
{
	mConfigFilename = config_filename;
}

/**
 * Method to load configuration data from the previously specified configuration filename (mConfigFilename),
 * into the config object.
 * @see Config::mConfigFilename
 * @see Config::mConfigFile
 */
void Config::load_config()
{
	CameraException ce;
	PError *error;
	
	LOG4CXX_INFO(logger,"load_config using configuration filename " << mConfigFilename);
	mConfigFile = p_ini_file_new(mConfigFilename.c_str());
	if(!p_ini_file_parse(mConfigFile,&error))
	{
		ce = create_config_exception(error);
		throw ce;
	}
	
}

/**
 * This method wraps a plibsys PError generated by an ini file problem in a CameraException
 */
CameraException Config::create_config_exception(PError *error)
{
	CameraException ce;
	
	std::string p_error_str(p_error_get_message(error));
	std::string error_string("Error reading config file:"+p_error_str);
	ce.message = error_string;
	return ce;
}
